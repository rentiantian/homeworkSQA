#How to ensure the quality of a software system

## Software Quality Assurement

Software quality assurance or testing is an area of our work which is often completely invisible to our clients. It is however a vital part of our production process, essential in giving us the confidence we need when we make a new release of one of our apps. There are lots of approaches to ensure the quality of app, and in this article we will talk about software quality assurement which limit to testing.

## Testing

Testing is the process of evaluating a system or its component(s) with the intent to find that whether it satisfies the specified requirements or not. This activity results in the actual, expected and difference between their results. In simple words testing is executing a system in order to identify any gaps, errors or missing requirements in contrary to the actual desire or requirements.

- Here are some ways to ensure the quality:

	- Test early and often. Delib have a strong belief that where possible quality should be built in throughout the development life cycle rather than tested in at the end of a project. This is an important part of the agile development process which we use when making our apps. We test what we do, whether it’s design, code, or documentation, early and often so that defects are found while the work is still fresh in people’s minds and before the defects can become too deeply embedded in the software.
	- Minimise variation. Any customisation of the software introduces variation which needs to be tested and maintained for every version of the app. Lean manufacturing has taught us that by minimising variation and developing apps which work for people out of the box we can reduce costs and more thoroughly test what we make, increasing the value of what we do for our clients. We recommend to our clients that they avoid paying us to customise our apps when possible so that we can provide them with the most cost efficient solution.
	- Build in flexibility. Where there is a common need for the same customisation from lots of clients we try to allow for this by building flexibility into the system. This limited and known variation can be accounted for when testing and does not add a huge cost overhead to our development process, while at the same time allowing our clients to change the things they need to.
	- Use great tools. Tools like Selenium and Jenkins enable us to run automated tests on our apps to ensure that any changes we make don’t break the existing features which our clients rely on. We continually make use of these tools throughout our development cycle.

- After know these techologies about testing, there are also many methods to testing our software. Such as Black box testing, White box testing, Grey Box Testing, manual testing, automation testing and so on. We should choice them rely on our porject. Functional Testing is the most important part of testing, here are some tips on it:
	
	- Ensure that that the documents defining the business and customer requirements are complete and correct, and the development team has clearly understand the dcoument.
	- Ensure that testers themselves have thoroughly read and understood the documents.
	- Ensure that the test cases are extensive and sensible to cover the complete requirements testing.
	- Ensure that during testing no changes in the test environment (coding etc.) is done by development team.
	- Ensure that all bugs reported should make sense (no duplication/overlapping of scenarios and no repetition of bugs reported).
